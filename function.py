from selenium.common.exceptions import NoSuchElementException, ElementNotInteractableException
from sys import platform
from time import sleep
import datetime

error = '‚õî'
warning = '‚ö†'
ok = '‚úÖ'
oc = 'üñ•'
like = 'üëç'
all_sleep = 3
like_sleep = 2


def get_data_time():
    time_now = datetime.datetime.now()
    return time_now.strftime("%d-%m-%Y %H:%M")

def get_OC():
    """
    –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –û–°.
    :return: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –û–° –∏ –ø—É—Ç—å –∫ chromedriver.exe
    """
    if platform == "linux" or platform == "linux2":
        time_now = datetime.datetime.now()
        information = "[" + time_now.strftime("%d-%m-%Y %H:%M") + '] {} –í–∞—à–∞ –û–° Linux'.format(oc)
        put = ""
        return information, put

    elif platform == "darwin":
        time_now = datetime.datetime.now()
        information = "[" + time_now.strftime("%d-%m-%Y %H:%M") + '] {} –í–∞—à–∞ –û–° Mac'.format(oc)
        put = ""
        return information, put

    elif platform == "win32":
        time_now = datetime.datetime.now()
        information = "[" + time_now.strftime("%d-%m-%Y %H:%M") + '] {} –í–∞—à–∞ –û–° Windows'.format(oc)
        put = "chromedriver_for_win/chromedriver.exe"
        return information, put

def information_from_txt_files():
    """
    –ß–∏—Ç–∞–µ–º —Ñ–∞–ª—ã .txt
    :return: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –õ–æ–≥–∏–Ω. –°–æ–æ–±—â–µ–Ω–∏—è.
    """
    information = ''
    with open('log.txt', 'r') as file:
        log = file.read()
        information += "[" + get_data_time() + \
                       '] {} –õ–æ–≥–∏–Ω –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç Tinder: {}'.format(ok, log)

    return information, log

def close_start_popups(browser):
    """
    –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ.
    :param browser: –ø–∞—Ä–º–µ—Ç—Ä –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞.
    :return: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    """
    sleep(all_sleep)
    try:
        browser.find_element_by_xpath('//button[@aria-label="–ó–∞–∫—Ä—ã—Ç—å"]').click()
        return "[" + get_data_time() + "] {} –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ.".format(ok)
    except ElementNotInteractableException as err:
        return "[" + get_data_time() + '] {} ' + err + ''.format(error)
    except NoSuchElementException as err:
        return "[" + get_data_time() + '] {} –ù–µ –Ω–∞—à–µ–ª –≤—Å–ø–ª–∞–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞.'.format(error)

def log_in_using_your_phone(browser):
    """
    –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –í–æ–π—Ç–∏ —Å –ø–æ–º–æ—â—å—é –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    :param browser: –ø–∞—Ä–º–µ—Ç—Ä –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞.
    :return: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    """
    sleep(all_sleep)
    try:
        browser.find_element_by_xpath('//div[@id="modal-manager"]').find_element_by_xpath(
            '//button[@aria-label="–í–æ–π—Ç–∏ —Å –ø–æ–º–æ—â—å—é –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"]').click()
        return "[" + get_data_time() + "] {} –í–æ–π—Ç–∏ —Å –ø–æ–º–æ—â—å—é –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.".format(ok)
    except ElementNotInteractableException as err:
        return "[" + get_data_time() + '] {} ' + err + ''.format(error)
    except NoSuchElementException as err:
        browser.find_element_by_xpath('//button[text()="–î—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã"]').click()
        return log_in_using_your_phone(browser)

def input_number_phone(browser, log):
    """
    –í–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    :param browser: –ø–∞—Ä–º–µ—Ç—Ä –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞.
    :param log: –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    :return: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
    """
    sleep(all_sleep)
    try:
        browser.find_element_by_name('phone_number').send_keys(log)
        return "[" + get_data_time() + '] {} –í–≤–µ–¥–µ–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {}'.format(ok, log)
    except NoSuchElementException:
        return "[" + get_data_time() + '] {} –ù–µ –Ω–∞—à–µ–ª –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.'.format(error)

def go_on(browser):
    """
    –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å.
    :param browser: –ø–∞—Ä–º–µ—Ç—Ä –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞.
    :return: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
    """
    sleep(all_sleep)
    try:
        browser.find_element_by_xpath('//span[text()="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"]').click()
        return "[" + get_data_time() + '] {} –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'.format(ok)
    except NoSuchElementException:
        return "[" + get_data_time() + '] {} –ù–µ –Ω–∞—à–µ–ª –∫–Ω–æ–ø–∫–∏ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å.'.format(error)

def input_cod(browser):
    """
    –í–≤–æ–¥ –∫–æ–¥–∞.
    :param browser: –ø–∞—Ä–º–µ—Ç—Ä –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞.
    :return: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
    """
    try:
        kod_numbers = code_check()
        kod = browser.find_elements_by_xpath('//input[@type="tel"]')
        n = 0
        for i in kod:
            i.send_keys(kod_numbers[n])
            n += 1
        return "[" + get_data_time() + '] {} –ö–æ–¥ –≤–≤–µ–¥–µ–Ω.'.format(ok)
    except NoSuchElementException:
        return "[" + get_data_time() + '] {} –ù–µ –Ω–∞—à–µ–ª –ø–æ–ª–µ–π –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–¥–∞.'.format(error)

def code_check():
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥–µ–Ω–æ–≥–æ –∫–æ–¥–∞.
    :return: –≤–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥
    """
    kod_numbers = input("[" + get_data_time() + "] {} –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥: ".format(warning))
    if len(kod_numbers) != 6:
        print("[" + get_data_time() + '] {} –ö–æ–¥ –Ω–µ –≤–µ—Ä–Ω—ã–π.'.format(error))
        return code_check()
    else:
        print("[" + get_data_time() + '] {} –§–æ—Ä–º–∞—Ç –∫–æ–¥–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω.'.format(ok))
        return kod_numbers

def geolocation_ok(browser):
    """
    –†–∞–∑—Ä–µ—à–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.
    :param browser: –ø–∞—Ä–º–µ—Ç—Ä –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞.
    :return: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
    """
    sleep(all_sleep)
    try:
        browser_button = browser.find_elements_by_tag_name("button")
        button_list = {i.text: i for i in browser_button}
        if "–†–ê–ó–†–ï–®–ò–¢–¨" in button_list.keys():
            button = [value for key, value in button_list.items() if key == "–†–ê–ó–†–ï–®–ò–¢–¨"]
            button[0].click()
            return "[" + get_data_time() + '] {} –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∞.'.format(ok)
        else:
            return "[" + get_data_time() + '] {} –ù–µ –Ω–∞—à–µ–ª –ø–æ–ª–µ–π –†–∞–∑—Ä–µ—à–∏—Ç—å –¥–ª—è –ì–µ–æ–ª–æ–∫–∞—Ü–∏–∏.'.format(error)
    except NoSuchElementException:
        return "[" + get_data_time() + '] {} –ù–µ –Ω–∞—à–µ–ª –ø–æ–ª–µ–π –†–∞–∑—Ä–µ—à–∏—Ç—å –¥–ª—è –ì–µ–æ–ª–æ–∫–∞—Ü–∏–∏.'.format(error)

def notice_off(browser):
    """
    –û—Ç–∫–ª—é—á–∞–µ–º –æ–ø–æ–≤–µ—â–µ–Ω–∏—è.
    :param browser: –ø–∞—Ä–º–µ—Ç—Ä –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞.
    :return: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
    """
    sleep(all_sleep)
    try:
        browser_button = browser.find_elements_by_tag_name("button")
        button_list = {i.text: i for i in browser_button}
        if "–ù–ï–ò–ù–¢–ï–†–ï–°–ù–û" in button_list.keys():
            button = [value for key, value in button_list.items() if key == "–ù–ï–ò–ù–¢–ï–†–ï–°–ù–û"]
            button[0].click()
            return "[" + get_data_time() + '] {} –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã.'.format(ok)
        else:
            return "[" + get_data_time() + '] {} –ù–µ –Ω–∞—à–µ–ª –ø–æ–ª–µ –ù–µ–∏–Ω—Ç–µ—Ä—Å–Ω–æ –¥–ª—è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.'.format(error)
    except NoSuchElementException:
        return "[" + get_data_time() + '] {} –ù–µ –Ω–∞—à–µ–ª –ø–æ–ª–µ –ù–µ–∏–Ω—Ç–µ—Ä—Å–Ω–æ –¥–ª—è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.'.format(error)

def popup_windows_off(browser):
    """
    –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –æ–∫–Ω–∞.
    :param browser: –ø–∞—Ä–º–µ—Ç—Ä –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞.
    :return: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
    """
    sleep(like_sleep)
    try:
        browser_button = browser.find_elements_by_tag_name("button")
        button_list = {i.text: i for i in browser_button}
        if "–ù–ï–ò–ù–¢–ï–†–ï–°–ù–û" in button_list.keys():
            button = [value for key, value in button_list.items() if key == "–ù–ï–ò–ù–¢–ï–†–ï–°–ù–û"]
            button[0].click()
            print("[" + get_data_time() + '] {} –í—Å–ø–ª–∞–≤–∞—é—â–µ–µ –æ–∫–Ω–æ.'.format(ok))
    except NoSuchElementException:
        pass

def click_like(browser):
    """
    –ù–∞–∂–∏–º–∞–µ–º LIKE.
    :param browser: –ø–∞—Ä–º–µ—Ç—Ä –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞.
    :return: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
    """
    sum_like = 0
    while True:
        try:
            popup_windows_off(browser)
            browser.find_element_by_xpath('//button[@aria-label="–õ–∞–π–∫"]').click()
            sum_like += 1
            print("[" + get_data_time() + '] {} - {}'.format(like, str(sum_like)))
        except NoSuchElementException:
            print("[" + get_data_time() + '] {} –ù–µ –Ω–∞—à–µ–ª –ø–æ–ª–µ –õ–∞–π–∫.'.format(error))